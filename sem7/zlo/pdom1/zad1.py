machine = {
        "initial": "setup",
        "transitions": [
            {
                "state before": "setup",
                "state after": "setup",
                "input letter before": "⊢",
                "move input head": 1,
                "work letter before": "⊢",
                "move work head": 1,
            },
            {
                "state before": "setup",
                "state after": "check_if_tapes_are_equal",
                "input letter before": "1",
                "move input head": -1,
                "work letter after": "1",
                "move work head": -1,
            },

            {
                "state before": "check_if_tapes_are_equal",
                "state after": "check_if_tapes_are_equal",
                "input letter before": "⊢",
                "move input head": 1,
                "work letter before": "⊢",
                "move work head": 1,
            },
            {
                "state before": "check_if_tapes_are_equal",
                "state after": "check_if_tapes_are_equal",
                "input letter before": "1",
                "move input head": 1,
                "work letter before": "1",
                "move work head": 1,
            },
            {
                "state before": "check_if_tapes_are_equal",
                "state after": "check_if_tapes_are_equal",
                "input letter before": "1",
                "move input head": 1,
                "work letter before": "2",
                "move work head": 1,
            },
            {
                "state before": "check_if_tapes_are_equal",
                "state after": "move_input_tape_to_beginning",
                "input letter before": "1",
                "move input head": -1,
                "move work head": -1,
            },
            {
                "state before": "check_if_tapes_are_equal",
                "input letter before": "⊣",
                "work letter before": "1",
                "halt": "reject",
            },
            {
                "state before": "check_if_tapes_are_equal",
                "input letter before": "⊣",
                "work letter before": "2",
                "halt": "reject",
            },
            {
                "state before": "check_if_tapes_are_equal",
                "input letter before": "⊣",
                "halt": "accept",
            },

            {
                "state before": "move_input_tape_to_beginning",
                "state after": "move_input_tape_to_beginning",
                "input letter before": "1",
                "move input head": -1,
                "move work head": 0,
            },
            {
                "state before": "move_input_tape_to_beginning",
                "state after": "count_ones_at_the_end_of_work_tape",
                "input letter before": "⊢",
                "move input head": 1,
                "work letter before": "1",
                "move work head": 0,
            },
            {
                "state before": "move_input_tape_to_beginning",
                "state after": "count_twos_at_the_end_of_work_tape",
                "input letter before": "⊢",
                "move input head": 1,
                "work letter before": "2",
                "move work head": 0,
            },

            {
                "state before": "count_ones_at_the_end_of_work_tape",
                "state after": "count_ones_at_the_end_of_work_tape",
                "input letter before": "1",
                "move input head": 1,
                "work letter before": "1",
                "move work head": -1,
            },
            {
                "state before": "count_ones_at_the_end_of_work_tape",
                "state after": "move_work_tape_to_end_of_ones",
                "input letter before": "1",
                "move input head": -1,
                "move work head": 1,
            },

            {
                "state before": "count_twos_at_the_end_of_work_tape",
                "state after": "count_twos_at_the_end_of_work_tape",
                "input letter before": "1",
                "move input head": 1,
                "work letter before": "2",
                "move work head": -1,
            },
            {
                "state before": "count_twos_at_the_end_of_work_tape",
                "state after": "move_work_tape_to_end_of_twos",
                "input letter before": "1",
                "move input head": -1,
                "move work head": 1,
            },

            {
                "state before": "move_work_tape_to_end_of_ones",
                "state after": "move_work_tape_to_end_of_ones",
                "move input head": 0,
                "work letter before": "1",
                "move work head": 1,
            },
            {
                "state before": "move_work_tape_to_end_of_ones",
                "state after": "append_twos_to_work_tape_to_match_previous_ones_number",
                "move input head": 0,
                "move work head": 0,
            },

            {
                "state before": "move_work_tape_to_end_of_twos",
                "state after": "move_work_tape_to_end_of_twos",
                "move input head": 0,
                "work letter before": "2",
                "move work head": 1,
            },
            {
                "state before": "move_work_tape_to_end_of_twos",
                "state after": "append_ones_to_work_tape_to_match_previous_twos_number",
                "move input head": 0,
                "move work head": 0,
            },

            {
                "state before": "append_twos_to_work_tape_to_match_previous_ones_number",
                "state after": "append_twos_to_work_tape_to_match_previous_ones_number",
                "input letter before": "1",
                "move input head": -1,
                "work letter after": "2",
                "move work head": 1,
            },
            {
                "state before": "append_twos_to_work_tape_to_match_previous_ones_number",
                "state after": "append_two_more_twos_to_work_tape",
                "input letter before": "⊢",
                "move input head": 0,
                "work letter after": "2",
                "move work head": 1,
            },

            {
                "state before": "append_ones_to_work_tape_to_match_previous_twos_number",
                "state after": "append_ones_to_work_tape_to_match_previous_twos_number",
                "input letter before": "1",
                "move input head": -1,
                "work letter after": "1",
                "move work head": 1,
            },
            {
                "state before": "append_ones_to_work_tape_to_match_previous_twos_number",
                "state after": "append_two_more_ones_to_work_tape",
                "input letter before": "⊢",
                "move input head": 0,
                "work letter after": "1",
                "move work head": 1,
            },

            {
                "state before": "append_two_more_twos_to_work_tape",
                "state after": "move_work_tape_to_beginning",
                "input letter before": "⊢",
                "move input head": 0,
                "work letter after": "2",
                "move work head": 0,
            },

            {
                "state before": "append_two_more_ones_to_work_tape",
                "state after": "move_work_tape_to_beginning",
                "input letter before": "⊢",
                "move input head": 0,
                "work letter after": "1",
                "move work head": 0,
            },

            {
                "state before": "move_work_tape_to_beginning",
                "state after": "move_work_tape_to_beginning",
                "move input head": 0,
                "work letter before": "1",
                "move work head": -1,
            },
            {
                "state before": "move_work_tape_to_beginning",
                "state after": "move_work_tape_to_beginning",
                "move input head": 0,
                "work letter before": "2",
                "move work head": -1,
            },
            {
                "state before": "move_work_tape_to_beginning",
                "state after": "check_if_tapes_are_equal",
                "move input head": 0,
                "work letter before": "⊢",
                "move work head": 0,
            },
        ],
}
